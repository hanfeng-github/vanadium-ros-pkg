#summary Package Documentation: arbotix

This is the temporary docs...

= Introduction =
The ArbotiX-ROS driver consists of custom firmware for the ArbotiX RoboController, and an ROS node which interacts over a USB serial connection.

The ArbotiX firmware provides:
 * Control of up to 252 Dynamixel servos
 * Control of up to 10 hobby (PWM) servos
 * Access to 8 analog channels
 * Control and access of up to 16 digital channels (multiplexed with the hobby servo channels)
 * Full, tunable PID control of 2 motors.
 * IK-based control of walking robots (this requires a special NUKE-based firmware).

All of these features are accessible within ROS using the _arbotix-ros_ node. On top of the firmware capabilities, the _arbotix-ros_ node provides:
 * High level control of a differential drive, including components necessary for using the ROS navigation stack, such as publishing odometry and tf information. (arbotix_controllers/base_controller).
 * High level control of IK-based walking robots using NUKE, including odometry and tf (arbotix_controllers/nuke_controller).
 * Action based joint controllers, for arms (arbotix_controllers/joint_traj_action).
 * Action based single joint controller (arbotix_controllers/single_traj_action).
 * Action based head controller (arbotix_controllers/head_action).
 * Low level joint controllers (arbotix_controllers/joint_controller).
 * Low level joint trajectory controllers (arbotix_controllers/joint_traj_controller).
 * The poor man's laser scanner, which broadcasts laser_scan topics using a long range IR sensor and AX-12. (arbotix_sensors/lidar).

= Core Controller = 
The core controller is the base of the arbotix node. It publishes the _joint_states_ topic.

_arbotix-ros_ offers the following services:
 * getAnalog
 * getDigital 
 * setDigital

Parameters: 
 * port (default: /dev/ttyUSB0)
 * baud (default: 38400)
 * rate (default: 10.0) - rate at which to publish the _joint_states_ topic. 
 * dynamixels ... 
 * servos ...
 * use_sync 

= Base Controller = 
The base controller is in command of a mobile base. It subscribes to the _cmd_vel_ topic, and publishes to the _odom_ topic. The nuke_controller is a derivative of the base_controller. 

Parameters:
 * ticks_meter - encoder ticks per meter of travel
 * base_width - width between differential drive wheels, in meters
 * base_rate (default: 10.0) how often to read encoders and publish odometry. 

= Lidar =

Parameters: 
 * lidar_rate (default: 1.0) 
 * lidar_frame (default: base_laser)

= YAML Specification =
The _arbotix-ros_ node uses a YAML file to specify it's many parameters and possible configurations. 

= Launch File = 
In order to load the YAML specification, it is recommended to use a launch file like the following: 

= Example: Nelson =
Coming Soon.