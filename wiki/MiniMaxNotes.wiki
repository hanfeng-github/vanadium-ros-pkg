#summary Build, Installation, and Usage info on Mini Maxwell

= Introduction =
Mini Max is a custom mobile manipulator, leveraging the !ArbotiX2, Dynamixel Servos, ROS, and an iRobot Create. The platform is open source.

<img src="https://vanadium-ros-pkg.googlecode.com/svn/wiki/watercolor.png" width="300">

== Parts List == 
[https://spreadsheets.google.com/spreadsheet/pub?hl=en_US&hl=en_US&key=0AoEGbFgI5kOhdG9fRkFTVnc5VXkyZ0JYcW5laDE3NkE&single=true&gid=5&output=html Parts List] _(DRAFT)_

== Arm Details ==
{{{
arm_shoulder_pan_joint id = 1
arm_shoulder_lift_joint id = 2
arm_elbow_flex_joint id = 3
arm_wrist_flex_joint id = 4
gripper_joint id = 5
}}}

== Head details ==
{{{
pan servo id = 6
tilt servo id = 7
}}}

== Using Mini Maxwell ==
Has been moved to [http://www.ros.org/wiki/mini_max/Tutorials Mini Maxwell Tutorials] on the ROS wiki. 

== Software Roadmap ==
The following need to be addressed:
 * mini_max_apps
   * tuck_arm needs to be updated
   * create launch file for nav

== Documentation Roadmap ==
 * How to build, wire robot
   * Installing Power Board
   * ~~Setting servo IDs~~
   * Assembling the Frame
   * Assembling, Wiring the Arm
   * Attaching the Kinect
   
 * Basic tutorials (on ROS.org):
   * (DONE) How to setup laptop -- covers installation of packages. 
   * (DONE) Starting up Mini Maxwell -- covers bringup.
   * (DONE) Using the Buttons -- covers reading the state of the switches.
   * Moving the base -- shows how to move the base by publishing cmd_vel. Students draw a square on the ground. Advanced: using TF to make it a nice square. 
   * Pointing the Head -- shows how to compute joint angles to look at a point in space.
   * Moving the Arm -- shows how to use the simple_arm_server, move the arm, open/close the gripper.
   * Using the Camera -- shows how to capture image, do cv_bridge, and then blur the image. 

  * Advanced tutorials (on ROS.org): 
   * Working with Point Clouds (C++) -- shows how to capture point clouds with the Kinect. Shows perception aspects of block_manipulation. 
   * Picking up Objects (C++) -- builds on perception of block_manipulation, picks up a recognized block. 

== Hardware Revision History ==
Future Work: 
Laser cut, parallel jaw gripper

Revision History:
 * V0.2 Revisions (Siena batch)
   * Add holes for ArbotiX mounting
   * Add right angle connectors on front upright, adjoining side
   * New Kinect mounting pieces
   * Add holes in base for wire pass through
 * V0.3 Revisions (Fergy's)
   * Add base ridge for increased stability of arm
   * Holes in base are now rounded squares (better USB cable access)
 * V0.4 Revisions (HMC?)
   * Move left-most Kinect mount just a bit for better alignment. 
 * V0.5 Revisions (Forthcoming)
    * Add USB slots (HMC upgrade)