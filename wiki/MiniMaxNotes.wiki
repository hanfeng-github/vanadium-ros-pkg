#summary Build, Installation, and Usage info on Mini Maxwell

= Introduction =
Mini Max is a custom mobile manipulator, leveraging the !ArbotiX2, Dynamixel Servos, ROS, and an iRobot Create. 

<img src="https://vanadium-ros-pkg.googlecode.com/svn/wiki/watercolor.png" width="300">

== Parts List == 
Full parts list coming soon

== Arm Details ==
{{{
arm_shoulder_pan_joint id = 1
arm_shoulder_lift_joint id = 2
arm_elbow_flex_joint id = 3
arm_wrist_flex_joint id = 4
gripper_joint id = 5
}}}

== Head details ==
{{{
pan servo id = 6
tilt servo id = 7
}}}

= ROS Setup =
Mini Maxwell has been developed against diamondback-desktop-full variant of ROS. To setup a netbook for your Mini Max: 
 * Install Ubuntu 10.04 (lucid) or 10.10 (maverick).
 * Install ROS Diamondback following the steps on the [http://www.ros.org/wiki/diamondback/Installation/Ubuntu ROS.org] site. For step 1.4, choose the recommended ''Desktop-Full Install'' option. 
 * Install svn, and the Kinect drivers: 
{{{
sudo apt-get install subversion ros-diamondback-openni-kinect
}}}
 * Create a storage area for your own ROS packages, as well as checkout out code:
{{{
mkdir ~/ros
}}}
 * Add your ''~/ros'' directory to your ROS Package Path, by adding the following line at the very end of your ''~/.bashrc'' file:
{{{
export ROS_PACKAGE_PATH=~/ros:${ROS_PACKAGE_PATH}
}}}
 * Now checkout the iRobot Create drivers and custom definitions for Mini Max:
{{{
cd ~/ros
svn co http://vanadium-ros-pkg.googlecode.com/svn/trunk/ vanadium-ros-pkg
cd ~/ros 
mkdir brown-ros-pkg
cd brown-ros-pkg
svn co https://brown-ros-pkg.googlecode.com/svn/tags/brown-ros-pkg/teleop_twist_keyboard teleop_twist_keyboard
svn co https://brown-ros-pkg.googlecode.com/svn/tags/brown-ros-pkg/irobot_create_2_1 irobot_create_2_1
}}}
 * Open a new terminal, to be sure that your ROS package path is updated, and then compile the necessary packages:
{{{
# generate the arbotix message definitions
roscd arbotix_msgs
make 
}}} 

= Using Mini Maxwell =
To setup a mini Max: 
 * Power on the laptop
 * Plug in the Create
 * Plug in the ArbotiX
 * Push the power button on the Create, you should hear a single beep. 
 * Start a terminal, and start _roscore_ within it:
 {{{
 roscore
 }}}
 * CTRL-SHIFT-TAB will get you another tab within the terminal program. Do this, and then: 
 {{{
 roslaunch mini_max_defs bringup.launch
 }}}

== Driving the Robot Around ==
The easiest way to move the robot around is using the teleop_twist_keyboard program. CTRL-SHIFT-TAB will again open another tab in your terminal, in which you can type: 
{{{
rosrun teleop_twist_keyboard teleop_twist_keyboard
}}}
You will then be able to drive the robot around using the keyboard. 
