<launch>

  <param name="use_sim_time" value="false" />

  <!-- send mini_max urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find mini_max_defs)/urdf/mini_max.urdf.xacro'" />

  <!-- bring up a create, arbotix -->
  <node pkg="turtlebot_node" type="turtlebot_node.py" name="turtlebot_node" output="screen" respawn="true" args="--respawnable">
    <param name="bonus" value="false" />
    <param name="update_rate" value="30.0" />
    <remap from="turtlebot_node/cmd_vel" to="cmd_vel" />
  </node>
  <node name="arbotix" pkg="arbotix_python" type="driver.py" output="screen">
    <rosparam file="$(find mini_max_defs)/params/mini_max.yaml" command="load" />
  </node>
  <node name="gripper_controller" pkg="arbotix_controllers" type="one_side_gripper_controller.py">
      <param name="invert" value="true"/>
      <param name="pad_width" value="0.0254"/>
  </node>

  <!-- Monitoring and Diagnostics -->
  <node pkg="turtlebot_node" type="laptop_battery.py" name="turtlebot_laptop_battery" />
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
    <rosparam command="load" file="$(find mini_max_defs)/params/diagnostics.yaml" />
  </node>

  <node pkg="robot_state_publisher" type="state_publisher" name="rob_st_pub" />
  <node pkg="tf" type="static_transform_publisher" name="kinect_link" args="0 0 0 0 0 0 /head_sensor_frame /openni_camera 100" />

</launch>
